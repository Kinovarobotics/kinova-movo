# SSH'ing into the movos
Make sure you are connected to the robohub wifi
movo1 can be reached by `ssh robohub@movo1`
movo2 can be reached by `ssh robohub@movo2`

# Camera
Camera uses the iai_kinect2 pkg
Can be launched with roslaunch kinect2_bridge kinect2_bridge.launch

#ROS Install
This metapackage uses vcstool to keep track of 3rd party packages that must be built from source
See ROS page on vcstool for context
Repositories can be imported with "vcs import src/ < src/kinova-movo/movo.rosinstall" from the root of the ws

# Moving the base
## Kinova Test Script
Assert that the robot is not charging
Assert estop is not engaged
On movo1, run <roslaunch movo_bringup movo1.launch>
On movo1, run <rosrun si_utils base_motion_test.py>
## Command Line Publishing
Assert that the robot is not charging
Assert estop is not engaged
On movo1, run <roslaunch movo_bringup movo1.launch>
On movo1, run <rostopic pub /movo/gp_command movo_msgs/ConfigCmd '{gp_cmd: "GENERAL_PURPOSE_CMD_SET_OPERATIONAL_MODE", gp_param: 5}'>
on movo1, run <rostopic pub -r 10 /movo/cmd_vel geometry_msgs/Twist  '{linear:  {x: 0.0, y: 0.0, z: 0.0}, angular: {x: 0.0,y: 0.0,z: 0.5}}'>


# Connecting personal PC to movo1 master
This is temporary and assumes movo1 is the ROS master. It does not care about about movo2
On movo1:
export ROS_MASTER_URI=http://129.97.71.49:11311
export ROS_IP=129.97.71.49
On your laptop:
export ROS_MASTER_URI=http://129.97.71.49:11311
export ROS_IP=<your ip address in same subnet as movo1>
