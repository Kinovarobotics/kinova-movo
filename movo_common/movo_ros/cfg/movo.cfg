#!/usr/bin/env python
PACKAGE = "movo_ros"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

group1 = gen.add_group("Teleop Paremeters")
group1.add("teleop_x_vel_limit_mps",      double_t, 1<<1,  "Maximum velocity in m/s for teleop",                            0.5,      0.0,     2.0)
group1.add("teleop_y_vel_limit_mps",      double_t, 1<<1,  "Maximum velocity in m/s for teleop",                            0.5,      0.0,     1.0)
group1.add("teleop_accel_limit_mps2",     double_t, 1<<1,  "Maximum velocity in m/s for teleop",                            0.5,      0.05,    2.5)
group1.add("teleop_yaw_rate_limit_rps",   double_t, 1<<1,  "Maximum yaw_rate in rad/s for teleop",                          1.0,      0.0,     3.2)
group1.add("teleop_yaw_accel_limit_rps2", double_t, 1<<1,  "Maximum yaw acceleration in rad/s^2 for teleop",                1.0,      0.063,   6.28)

group1.add("teleop_arm_vel_limit",        double_t, 1<<1,  "Maximum arm cartesian velocity in cm/s",                               0.1,      0.0,     0.2)

group1.add("teleop_pan_tilt_vel_limit",   double_t, 1<<1,  "Maximum pan_tilt velocity in rad/s for teleop",                   0.524,    0.0,     0.872)

group1.add("teleop_linear_actuator_vel_limit", double_t, 1<<1,  "Maximum linear actuator velocity limit in m/s for teleop", 0.05,     0.0,     0.1)


group3 = gen.add_group("Machine Configuration Paremeters")
group3.add("x_vel_limit_mps",             double_t, 1<<2,  "Maximum forward velocity in m/s for Movo",                    1.0,      0.0,     2.0)
group3.add("y_vel_limit_mps",             double_t, 1<<2,  "Maximum strafe velocity in m/s for Movo",                     0.5,      0.0,     1.0)
group3.add("accel_limit_mps2",            double_t, 1<<2,  "Maximum acceleration in m/s^2 for Movo",                      0.5,      0.05,    2.5)
group3.add("decel_limit_mps2",            double_t, 1<<2,  "Maximum deceleration in m/s^2 for Movo",                      0.5,      0.05,    2.5)
group3.add("dtz_decel_limit_mps2",        double_t, 1<<2,  "Maximum emergency DTZ deceleration in m/s^2 for Movo",        1.0,      0.981,   2.5)
group3.add("yaw_rate_limit_rps",          double_t, 1<<2,  "Maximum yaw rate in rad/s for Movo",                             1.0,      0.0,     3.2)
group3.add("yaw_accel_limit_rps2",        double_t, 1<<2,  "Maximum yaw acceleration in rad/s^2 for Movo",                1.0,      0.063,   6.28)
group3.add("wheel_diameter_m",            double_t, 1<<2,  "wheel diameter in m for Movo",                                0.1524,   0.1324,  0.1724)
group3.add("wheel_base_length_m",         double_t, 1<<2,  "Distance between front and rear contact patch in m for Movo", 0.50173,  0.48173, 0.52173)
group3.add("wheel_track_width_m",         double_t, 1<<2,  "Distance between left and right contact patch in m for Movo", 0.42835,  0.40835, 0.44835)
group3.add("gear_ratio",                  double_t, 1<<2,  "Input to ouput gear ratio for Movo",                          5.0,      1.0,     50.0)

group3.add("motion_while_charging",       bool_t,      1<<2, "Allow motion with charger connected",               False)

 

motion_input_filter_enum = gen.enum([ gen.const("filter_10Hz_Cutoff", int_t, 0x0, ""), 
                           gen.const("filter_4Hz_Cutoff", int_t, 0x1, ""),
                           gen.const("filter_1Hz_Cutoff", int_t, 0x2, ""),
                           gen.const("filter_0p5Hz_Cutoff", int_t, 0x4, ""),
                           gen.const("filter_0p2Hz_Cutoff", int_t, 0x8, "") ],
                           "Motion controller input filter cutoff frequency")
group3.add("motion_ctl_input_filter", int_t, 1<<2, "Motion Controller Input Filter Cutoff", 0x0, edit_method=motion_input_filter_enum)

group3.add("linear_actuator_vel_limit_mps", double_t, 1<<3,  "Maximum velocity for the linear actuator",                   0.1,      0.0,   0.2)

group2 = gen.add_group("Correction Factors")
group2.add("strafe_correction_factor",            double_t, 1<<4,  "factor applied to y odometry components to correct for straying angle variation surface to surface",    0.0, -0.5,  0.5)
group2.add("yaw_correction_factor",               double_t, 1<<5,  "factor applied to yaw odometry components to correct for straying angle variation surface to surface",  0.0, -0.5,  0.5)

gen.generate(PACKAGE, "movo", "movo")
exit
