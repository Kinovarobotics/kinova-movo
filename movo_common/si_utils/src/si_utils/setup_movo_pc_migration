#!/bin/bash

echo -e "This script assumes that you have Ubuntu 16.04 LTS installed."
echo -e "It will install all the dependencies to build and run the MOVO ROS Kinetic packages on a MOVO Computer."

read -r -p "Are you absolutely sure you want to continue? [y/N] " response
if [[ "$response" =~ ^([yY][eE][sS]|[yY])+$ ]]
then
    echo "Starting setup......"
    sleep 1
else
    exit 1
fi

export MOVO_SETUP_DIR=$PWD

echo -e "\nNeed sudo permission to do the configuration and setup\nPlease enter your password if prompted....\n"
echo "$USER ALL=(ALL) NOPASSWD:ALL" | (sudo su -c 'EDITOR="tee -a" visudo') >> /dev/null

# Remove the Indigo stuff
sudo apt-get purge -y ros-indigo*
sudo apt-get purge -y libopenni* librealsense2*
sudo apt autoremove

# Install ROS Kinetic
sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
sudo apt-get update && sudo apt-get upgrade
sudo apt-get install -y ros-kinetic-desktop-full
source /opt/ros/kinetic/setup.bash
sudo rm -f /etc/ros/rosdep/sources.list.d/20-default.list
sudo rosdep init
rosdep update
source /opt/ros/kinetic/setup.bash

# Install third parties and additionnal libraries
sudo apt-get install -y python-rosinstall
sudo apt-get update && sudo apt-get upgrade
sudo apt-get install -y libfcl0.5=0.5.0-3osrf1~xenial3
sudo apt-get install -y xdotool wmctrl iperf chrony htop bridge-utils ros-kinetic-navigation ros-kinetic-gmapping ros-kinetic-robot-localization ros-kinetic-yocs-cmd-vel-mux ros-kinetic-joy ros-kinetic-urg-node ros-kinetic-sick-tim ros-kinetic-cmake-modules daemontools openssh-server libpcap0.8-dev ros-kinetic-um7 ros-kinetic-imu-tools ros-kinetic-jsk-recognition ros-kinetic-ros-controllers ros-kinetic-scan-tools ros-kinetic-gazebo-ros ros-kinetic-gazebo-plugins ros-kinetic-moveit ros-kinetic-gazebo-ros-control ros-kinetic-hector-gazebo-plugins syslinux-utils ros-kinetic-moveit-msgs ros-kinetic-costmap-2d ros-kinetic-trac-ik ros-kinetic-control-toolbox libbullet-dev ros-kinetic-base-local-planner ros-kinetic-move-base-msgs ros-kinetic-controller-interface ros-kinetic-controller-manager libproj-dev libgtk-3-dev 
sudo apt-get install -y python-pyaudio python-pip 
sudo -H pip install --upgrade pip
sudo -H pip install --upgrade pocketsphinx
source /opt/ros/kinetic/setup.bash

#Change the .bashrc file to source Kinetic instead of Indigo
sed -i -e 's/indigo/kinetic/g' ~/.bashrc ~/env.sh

# Add x86 lib to LD_LIBRARY_PATH so ROS can find PCL
sudo touch /etc/ld.so.conf.d/usr-lib-x86.conf
echo "/usr/lib/x86_64-linux-gnu/" | sudo tee /etc/ld.so.conf.d/usr-lib-x86.conf
sudo ldconfig

# Install AssImp from source because we need v3.6 and not v3.5 (official Debian release)
git clone https://github.com/assimp/assimp.git -b v3.3.1
cd assimp
mkdir build && cd build
cmake ..
make
sudo make install 
cd ../port/PyAssimp
sudo python setup.py install 
cd ../../..
sudo rm -rf assimp

# Kinect-related

# Install Beignet from source
sudo apt-get install -y cmake pkg-config python ocl-icd-dev libegl1-mesa-dev ocl-icd-opencl-dev libdrm-dev libxfixes-dev libxext-dev llvm-3.6-dev clang-3.6 libclang-3.6-dev libtinfo-dev libedit-dev zlib1g-dev
git clone https://github.com/intel/beignet.git
cd beignet/
mkdir build 
cd build/
cmake ../
make
sudo make install
cd ../../
rm -rf beignet

# Install libfreenect2 from source
git clone https://github.com/OpenKinect/libfreenect2.git
cd libfreenect2
sudo apt-get install -y build-essential cmake pkg-config
sudo dpkg -i debs/libusb*deb
sudo apt-get install -y libturbojpeg libjpeg-turbo8-dev
sudo dpkg -i debs/libglfw3*deb; sudo apt-get install -f
sudo apt-get install -y libgl1-mesa-dri-lts-vivid
sudo apt-add-repository ppa:deb-rob/ros-xenial && sudo apt-get update
sudo apt-get install -y libopenni2-dev
mkdir build && cd build
cmake .. -DENABLE_CXX11=ON
make
sudo make install
sudo cp ../platform/linux/udev/90-kinect2.rules /etc/udev/rules.d/
cd ../../
rm -rf libfreenect2

# Realsense-related
git clone https://github.com/IntelRealSense/librealsense.git
cd librealsense
git checkout v2.15.0
mkdir build && cd build
cmake ..
make
sudo make install
cd ../../
rm -rf librealsense

# Change the upstart bash aliases for the systemd bash aliases in MOVO1 and MOVO2
sed -i -e "s/alias movostop='sudo service movo-core stop'/alias movostop='sudo systemctl stop movo-core'/g" ~/.bashrc
sed -i -e "s/alias movostart='sudo service movo-core start'/alias movostart='sudo systemctl start movo-core'/g" ~/.bashrc
sed -i -e "s/alias movochk='sudo tail /var/log/upstart/movo-core.log -n 30'/alias movochk='journalctl -b -u movo-core.service -n 30 -f'/g" ~/.bashrc

echo -e "\nScript has finished updating the computer.\n\nPress any key to exit....\n"
read -n 1 -s
exit 1

