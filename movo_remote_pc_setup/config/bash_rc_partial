
# MOVO REMOTE PC START

source /opt/ros/indigo/setup.bash
source /home/$USER/movo_ws/devel/setup.bash

function movo2_cmd()
{
  if [ -z "$1" ]
  then
    echo "Need to specify command"
  else
    ssh -t movo@movo2 "bash -ic +m 'cd ~; ./env.sh; $1'"
  fi
}

function movo1_cmd()
{
  if [ -z "$1" ]
  then
    echo "Need to specify command"
  else
    ssh -t movo@movo1 "bash -ic +m 'cd ~; ./env.sh; $1'"
  fi
}

function save_map()
{
  if [ ! -z "$1" ]
  then
    local dest='/home/$USER/movo_ws/src/movo_demos/maps/'$1
  else
    local dest='/home/$USER/movo_ws/src/movo_demos/maps/mymap'
  fi
  
  rosrun map_server map_saver -f $dest 
  local old_line='/home/$USER/movo_ws/src/movo_demos/maps/'
  local new_line=''    
  sed -i "s%$old_line%$new_line%g" "$dest.yaml"
 
  rsync -avzh --delete --exclude '*~' --progress /home/$USER/movo_ws/src/movo_demos/maps movo@movo2:/home/movo/movo_ws/src/movo_demos/
  rsync -avzh --delete --exclude '*~' --progress /home/$USER/movo_ws/src/movo_demos/maps movo@movo1:/home/movo/movo_ws/src/movo_demos/
  
  echo "Map saved locally and on the robot!!!!"

}

function sync_robot()
{
  echo "CLEANING UP THE LOCAL WORKSPACE.........."
  sleep 1
  find ~/movo_ws/ -name '*~' | xargs rm

  echo "STOPPING THE ROBOT SERVICE AND UNINSTALLING IT.........."
  sleep 1
  movo2_cmd "movostop; rosrun movo_bringup uninstall_movo_core"

  echo "SYNCING WORKSPACE ON movo1 WITH LOCAL WORKSPACE.........."
  sleep 1
  rsync -avzhe ssh --delete --exclude '*~' --progress /home/$USER/movo_ws/src movo@movo1:/home/movo/movo_ws/
  
  echo "SYNCING WORKSPACE ON movo2 WITH LOCAL WORKSPACE.........."
  sleep 1
  rsync -avzhe ssh --delete --exclude '*~' --progress /home/$USER/movo_ws/src movo@movo2:/home/movo/movo_ws/

  if [ "$1" == "-nc" ]
  then
    echo "USER SKIPPED RECOMPILE ON ROBOT!!!!!!!!!!!!"
    sleep 1
  else
    echo "RE-BUILDING WORKSPACE ON movo1"
    sleep 1
    movo1_cmd "cd ~/movo_ws; rm -rf build/ devel/; catkin_make"
    echo "RE-BUILDING WORKSPACE ON movo2"
    sleep 1
    movo2_cmd "cd ~/movo_ws; rm -rf build/ devel/; catkin_make"
  fi

  echo "INSTALLING THE ROBOT SERVICE AND STARTING IT.........."
  sleep 1
  movo2_cmd "rosrun movo_bringup install_movo_core; movostart"

  echo "ROBOT IS ALL UPDATED..........EXITING"
  sleep 1
}

alias sws='source ./devel/setup.bash'
alias clean_backups='find ./ -name '*~' | xargs rm'
alias clean_pyc='find ./ -name '*.pyc' | xargs rm'
alias clean_rosbuild='rm -rf build devel install'
alias m2='ssh -X movo@movo2'
alias m1='ssh -X movo@movo1'
alias movostop='movo2_cmd "movostop"'
alias movostart='movo2_cmd "movostart"'
alias movochk='movo2_cmd "movochk"'

alias kill_robot_pcs='movo1_cmd "sudo shutdown -h now" && movo2_cmd "sudo shutdown -h now"'
alias fix_gvfs="sudo umount ~/.gvfs && sudo rm -rf ~/.gvfs"
alias killgazebo="killall -9 gazebo & killall -9 gzserver  & killall -9 gzclient"
alias killros="killall -9 roscore & killall -9 rosmaster"
alias fix_stl='grep -rl 'solid' ./ | xargs sed -i 's/solid/robot/g''
alias fix_perm='find . -name 'bin' -type d -exec chmod a+x -R {} \; && find . -name 'scripts' -type d -exec chmod a+x -R {} \; && find . -name 'cfg' -type d -exec chmod a+x -R {} \; && find . -name 'nodes' -type d -exec chmod a+x -R {} \;'

alias sim_demo='roslaunch movo_demos sim_demo.launch'
alias sim_teleop='roslaunch movo_demos sim_teleop.launch'
alias sim_mapping='roslaunch movo_demos sim_mapping.launch'
alias sim_sensor_nav='roslaunch movo_demos sim_sensor_nav.launch'
alias sim_map_nav='roslaunch movo_demos sim_map_nav.launch'
alias sim_assisted_teleop='roslaunch movo_demos sim_assisted_teleop.launch'

alias robot_demo='roslaunch movo_demos robot_demo.launch'
alias robot_teleop='roslaunch movo_demos robot_teleop.launch'
alias robot_mapping='roslaunch movo_demos robot_mapping.launch'
alias robot_sensor_nav='roslaunch movo_demos robot_sensor_nav.launch'
alias robot_assisted_teleop='roslaunch movo_demos robot_assisted_teleop.launch'

function robot_map_nav()
{
  if [ -z "$1" ]
  then
    echo "Need to specify mapfile argument"
  else
    roslaunch movo_demos robot_map_nav.launch map_file:=$1
  fi
}
